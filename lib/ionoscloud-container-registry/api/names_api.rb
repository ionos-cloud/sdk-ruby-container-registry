=begin
#Container Registry service

#Container Registry service enables IONOS clients to manage docker and OCI compliant registries for use by their managed Kubernetes clusters. Use a Container Registry to ensure you have a privately accessed registry to efficiently support image pulls.

The version of the OpenAPI document: 1.0
Contact: support@cloud.ionos.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.2.1-SNAPSHOT

=end

require 'cgi'

module IonoscloudContainerRegistry
  class NamesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get container registry name availability
    # Validate that the name is suitable to use for a new registry: - it uses only the characters \"a-z\", \"0-9\", or \"-\" - and starts with a letter and ends with a letter or number - and is between 3 to 63 characters in length - and is available
    # @param name [String] The desired registry name
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def names_check_usage(name, opts = {})
      names_check_usage_with_http_info(name, opts)
      nil
    end

    # Get container registry name availability
    # Validate that the name is suitable to use for a new registry: - it uses only the characters \&quot;a-z\&quot;, \&quot;0-9\&quot;, or \&quot;-\&quot; - and starts with a letter and ends with a letter or number - and is between 3 to 63 characters in length - and is available
    # @param name [String] The desired registry name
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def names_check_usage_with_http_info(name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: NamesApi.names_check_usage ...'
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling NamesApi.names_check_usage"
      end
      pattern = Regexp.new(/^[a-z][-a-z0-9]{1,61}[a-z0-9]$/)
      if @api_client.config.client_side_validation && name !~ pattern
        fail ArgumentError, "invalid value for 'name' when calling NamesApi.names_check_usage, must conform to the pattern #{pattern}."
      end

      # resource path
      local_var_path = '/names/{name}'.sub('{' + 'name' + '}', CGI.escape(name.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type]

      # auth_names
      auth_names = opts[:debug_auth_names] || ['basicAuth', 'tokenAuth']

      new_options = opts.merge(
        :operation => :"NamesApi.names_check_usage",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:HEAD, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: NamesApi#names_check_usage\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
